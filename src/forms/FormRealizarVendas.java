/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import classes.Atende;
import classes.Cliente;
import classes.Funcionario;
import classes.Pagamento;
import classes.Produto;
import classes.Produtos_Venda;
import classes.Venda;
import classes.Nota_Fiscal;
import dao.DAOAtende;
import dao.DAOCliente;
import dao.DAOFuncionario;
import dao.DAONota_Fiscal;
import dao.DAOPagamento;
import dao.DAOProdutos;
import dao.DAOProdutos_Venda;
import dao.DAOVenda;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Leon Jr
 */
public class FormRealizarVendas extends javax.swing.JDialog {

    /**
     * Creates new form FormRealizarVendas
     */
    public FormRealizarVendas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        iniciar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbxCliente = new javax.swing.JComboBox<>();
        txtFindCli = new javax.swing.JTextField();
        cbxFunc = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtFindFunc = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        txtFindProd = new javax.swing.JTextField();
        cbxProd = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        spnQtd = new javax.swing.JSpinner();
        txtTT = new javax.swing.JLabel();
        txtPP = new javax.swing.JLabel();
        btnVend = new javax.swing.JButton();
        btnNewCli = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        txtTP = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cbxPagamento = new javax.swing.JComboBox<>();
        txtPag = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        btnEncerrar = new javax.swing.JButton();
        vendas = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtPP1 = new javax.swing.JLabel();
        txtTT1 = new javax.swing.JLabel();
        txtTP1 = new javax.swing.JLabel();
        txtCPF = new javax.swing.JLabel();
        txtCPF1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Realizar Vendas");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        jLabel1.setText("Cadastro da venda");

        jLabel2.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        jLabel2.setText("Escolha ou pesquise por um cliente:");

        cbxCliente.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        cbxCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxClienteActionPerformed(evt);
            }
        });

        txtFindCli.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        txtFindCli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFindCliKeyReleased(evt);
            }
        });

        cbxFunc.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        jLabel3.setText("Escolha ou pesquise pelo funcionario :");

        txtFindFunc.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        txtFindFunc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFindFuncKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        jLabel4.setText("Escolha ou pesquise pelo produto da venda:");

        txtFindProd.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        txtFindProd.setEnabled(false);
        txtFindProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFindProdKeyReleased(evt);
            }
        });

        cbxProd.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        cbxProd.setEnabled(false);
        cbxProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxProdActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        jLabel5.setText("Escolha a quantidade desejada: ");

        spnQtd.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        spnQtd.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        spnQtd.setEnabled(false);
        spnQtd.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnQtdStateChanged(evt);
            }
        });

        txtTT.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N

        txtPP.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N

        btnVend.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        btnVend.setText("Realizar Vendas");
        btnVend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendActionPerformed(evt);
            }
        });

        btnNewCli.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        btnNewCli.setText("Novo Cliente");
        btnNewCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewCliActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        btnAdd.setText("Adicionar");
        btnAdd.setEnabled(false);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnFechar.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        btnFechar.setText("Fechar Venda");
        btnFechar.setEnabled(false);
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        txtTP.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        jLabel9.setText("Itens de Venda");

        jLabel10.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        jLabel10.setText("Pagamento");

        jLabel11.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        jLabel11.setText("Escolher meio de pagamento:");

        cbxPagamento.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        cbxPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dinheiro", "Cheque", "Cartão de Crédito", "Cartão de Débito", "Cupom de Crédito" }));
        cbxPagamento.setEnabled(false);

        txtPag.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        txtPag.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        jLabel12.setText("Total recebido");

        btnEncerrar.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        btnEncerrar.setText("Encerrar Venda");
        btnEncerrar.setEnabled(false);
        btnEncerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncerrarActionPerformed(evt);
            }
        });

        vendas.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        vendas.setText("Vendas");
        vendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendasActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        btnCancel.setText("Cancelar");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        txtPP1.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        txtPP1.setText("Preço do produto:");

        txtTT1.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        txtTT1.setText("Preço total:");

        txtTP1.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        txtTP1.setText("Total a pagar:");

        txtCPF.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        txtCPF.setText("CPF do cliente:");

        txtCPF1.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        txtCPF1.setText("CPF do cliente:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnFechar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtFindProd)
                                    .addComponent(cbxProd, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(39, 39, 39)
                                                .addComponent(spnQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtTT1))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtPP1))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(txtTP1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTT)
                            .addComponent(txtPP)
                            .addComponent(txtTP))
                        .addGap(182, 182, 182))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(btnNewCli))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(txtCPF1)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCPF)
                                .addGap(141, 141, 141)
                                .addComponent(btnVend))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(cbxCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtFindCli, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(53, 53, 53)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbxFunc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtFindFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43)
                                .addComponent(btnCancel)))
                        .addGap(0, 67, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxPagamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(txtPag, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(143, 143, 143)
                        .addComponent(btnEncerrar)
                        .addGap(46, 46, 46)
                        .addComponent(vendas, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtFindCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFindFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbxFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(btnCancel))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(38, 38, 38)
                        .addComponent(btnNewCli)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVend)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCPF)
                        .addComponent(txtCPF1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFindProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbxProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnFechar)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPP)
                            .addComponent(txtPP1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTT)
                                    .addComponent(txtTT1))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTP)
                                    .addComponent(txtTP1)))
                            .addComponent(spnQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(12, 12, 12)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEncerrar)
                    .addComponent(vendas))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método para localizar os nomes com filtros por base no teclado
     *
     * @param evt Cada clique no teclado
     */
    private void txtFindCliKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFindCliKeyReleased
        if (evt.getKeyCode() == evt.VK_A || evt.getKeyCode() == evt.VK_B || evt.getKeyCode() == evt.VK_C || evt.getKeyCode() == evt.VK_D || evt.getKeyCode() == evt.VK_E
                || evt.getKeyCode() == evt.VK_F || evt.getKeyCode() == evt.VK_G || evt.getKeyCode() == evt.VK_H || evt.getKeyCode() == evt.VK_I || evt.getKeyCode() == evt.VK_J
                || evt.getKeyCode() == evt.VK_K || evt.getKeyCode() == evt.VK_L || evt.getKeyCode() == evt.VK_M || evt.getKeyCode() == evt.VK_N || evt.getKeyCode() == evt.VK_O
                || evt.getKeyCode() == evt.VK_P || evt.getKeyCode() == evt.VK_Q || evt.getKeyCode() == evt.VK_R || evt.getKeyCode() == evt.VK_S || evt.getKeyCode() == evt.VK_T
                || evt.getKeyCode() == evt.VK_U || evt.getKeyCode() == evt.VK_V || evt.getKeyCode() == evt.VK_X || evt.getKeyCode() == evt.VK_Y || evt.getKeyCode() == evt.VK_Z
                || evt.getKeyCode() == evt.VK_BACK_SPACE) {
            atualizarClientes(txtFindCli.getText());
        }
    }//GEN-LAST:event_txtFindCliKeyReleased

    /**
     * Método para localizar os nomes com filtros por base no teclado
     *
     * @param evt Cada clique no teclado
     */
    private void txtFindFuncKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFindFuncKeyReleased
        if (evt.getKeyCode() == evt.VK_A || evt.getKeyCode() == evt.VK_B || evt.getKeyCode() == evt.VK_C || evt.getKeyCode() == evt.VK_D || evt.getKeyCode() == evt.VK_E
                || evt.getKeyCode() == evt.VK_F || evt.getKeyCode() == evt.VK_G || evt.getKeyCode() == evt.VK_H || evt.getKeyCode() == evt.VK_I || evt.getKeyCode() == evt.VK_J
                || evt.getKeyCode() == evt.VK_K || evt.getKeyCode() == evt.VK_L || evt.getKeyCode() == evt.VK_M || evt.getKeyCode() == evt.VK_N || evt.getKeyCode() == evt.VK_O
                || evt.getKeyCode() == evt.VK_P || evt.getKeyCode() == evt.VK_Q || evt.getKeyCode() == evt.VK_R || evt.getKeyCode() == evt.VK_S || evt.getKeyCode() == evt.VK_T
                || evt.getKeyCode() == evt.VK_U || evt.getKeyCode() == evt.VK_V || evt.getKeyCode() == evt.VK_X || evt.getKeyCode() == evt.VK_Y || evt.getKeyCode() == evt.VK_Z
                || evt.getKeyCode() == evt.VK_BACK_SPACE) {
            atualizarFuncionarios(txtFindFunc.getText());
        }
    }//GEN-LAST:event_txtFindFuncKeyReleased
    /**
     * Botão que cria um novo cliente
     *
     * @param evt Clique no botão
     */
    private void btnNewCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewCliActionPerformed
        FormClientes form = new FormClientes(null, true);
        form.setVisible(true);
    }//GEN-LAST:event_btnNewCliActionPerformed
    Funcionario funcio = null;
    Venda v=null;

    /**
     * Inicia as vendas de produtos pos escolher as opções
     *
     * @param evt clique no botão
     */
    private void btnVendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendActionPerformed
        cbxCliente.setEnabled(false);
        btnNewCli.setEnabled(false);
        cbxFunc.setEnabled(false);
        txtFindCli.setEnabled(!true);
        txtFindFunc.setEnabled(!true);
        txtFindProd.setEnabled(true);
        cbxProd.setEnabled(true);
        spnQtd.setEnabled(true);
        btnAdd.setEnabled(true);
        btnVend.setEnabled(false);
    }//GEN-LAST:event_btnVendActionPerformed
    /**
     * Método para localizar os nomes com filtros por base no teclado
     *
     * @param evt Cada clique no teclado
     */
    private void txtFindProdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFindProdKeyReleased
        if (evt.getKeyCode() == evt.VK_A || evt.getKeyCode() == evt.VK_B || evt.getKeyCode() == evt.VK_C || evt.getKeyCode() == evt.VK_D || evt.getKeyCode() == evt.VK_E
                || evt.getKeyCode() == evt.VK_F || evt.getKeyCode() == evt.VK_G || evt.getKeyCode() == evt.VK_H || evt.getKeyCode() == evt.VK_I || evt.getKeyCode() == evt.VK_J
                || evt.getKeyCode() == evt.VK_K || evt.getKeyCode() == evt.VK_L || evt.getKeyCode() == evt.VK_M || evt.getKeyCode() == evt.VK_N || evt.getKeyCode() == evt.VK_O
                || evt.getKeyCode() == evt.VK_P || evt.getKeyCode() == evt.VK_Q || evt.getKeyCode() == evt.VK_R || evt.getKeyCode() == evt.VK_S || evt.getKeyCode() == evt.VK_T
                || evt.getKeyCode() == evt.VK_U || evt.getKeyCode() == evt.VK_V || evt.getKeyCode() == evt.VK_X || evt.getKeyCode() == evt.VK_Y || evt.getKeyCode() == evt.VK_Z
                || evt.getKeyCode() == evt.VK_BACK_SPACE) {
            atualizarProdutos(txtFindProd.getText());
        }
    }//GEN-LAST:event_txtFindProdKeyReleased
    /**
     * Método para adicionar um produto em uma lista
     *
     * @param evt clique no botão
     */
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        for (Produto produto : daopro.getLista()) {
            if (cbxProd.getSelectedItem().toString().equals(produto.getNome())) {
                if(produto.getQuantidade()>=(int)spnQtd.getValue()){
                Produto obj = produto;
                txtPP.setText(" R$" + obj.getPreco());
                obj.setQuantidade((int) spnQtd.getValue());
                total += obj.getPreco() * obj.getQuantidade();
                obj.setPreco(obj.getPreco() * obj.getQuantidade());
                produtos.add(obj);
                limpar();
                DecimalFormat dcm = new DecimalFormat("#######.##");
                txtTP.setText(" R$" + dcm.format(total));
                txtTT.setText("R$ ");
                btnFechar.setEnabled(true);
                }else{
                    JOptionPane.showMessageDialog(null,"Quantidade do produto indisponivel");
                }
                
            } 
        }

    }//GEN-LAST:event_btnAddActionPerformed
    /**
     * Botão que fecha a venda parcialmente
     *
     * @param evt Clique no botão
     */
    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        txtFindProd.setEnabled(false);
        cbxProd.setEnabled(false);
        btnAdd.setEnabled(false);
        spnQtd.setEnabled(false);
        btnFechar.setEnabled(false);
        cbxPagamento.setEnabled(true);
        txtPag.setEnabled(true);
        btnEncerrar.setEnabled(true);
        vendas.setEnabled(true);
    }//GEN-LAST:event_btnFecharActionPerformed
    /**
     * Clique encerrar a venda e a insera no BD
     *
     * @param evt clique no botão de encerrar
     */
    private void btnEncerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncerrarActionPerformed
        try{
        Atende obj = new Atende();
        for (Cliente cliente : daoc.getLista()) {
            if (cbxCliente.getSelectedItem().toString().equals(cliente.getNome())) {
                obj.setCliente(cliente.getIdCliente());
                cli = cliente;
            }
        }
        for (Funcionario func : daof.getLista()) {
            if (cbxFunc.getSelectedItem().toString().equals(func.getNome())) {
                obj.setFuncionario(func.getIdFunc());
                this.funcio = func;
            }
        }
        System.out.println(obj.getCliente() + " " + obj.getFuncionario());
        daoa.incluir(obj);
        Pagamento p = new Pagamento();
        v = new Venda();
        p.setTipoPagamento(cbxPagamento.getSelectedItem().toString());
        p.setValor(Float.parseFloat(txtPag.getText()));
        Pagamento pa = daop.getLista().get(daop.getLista().size() - 1);
        p.setIdPagamento(pa.getIdPagamento() + 1);
        v.setFuncionario(funcio.getIdFunc());
        v.setPreco(total);
        Venda vend = daov.getLista().get(daov.getLista().size() - 1);
        v.setIdVenda(vend.getIdVenda() + 1);
        v.setCliente(cli.getIdCliente());
        daop.incluir(p);
        v.setPagamento(p.getIdPagamento());
        System.out.println(p.getIdPagamento());
        daov.incluir(v);
        for (Produto produto : produtos) {
            Produtos_Venda pv = new Produtos_Venda();
            pv.setPreco(produto.getPreco());
            pv.setProduto(produto.getIdProduto());
            pv.setQuantidade(produto.getQuantidade());
            pv.setNome(produto.getNome());
            pv.setVenda(v.getIdVenda());
            Date data = new Date();
            SimpleDateFormat format = new SimpleDateFormat("dd/mm/yyyy");
            String dataa = format.format(data);
            pv.setData(dataa);
            Produtos_Venda pvend = daopv.getLista().get(daopv.getLista().size() - 1);
            pv.setIdProdutosVenda(pvend.getIdProdutosVenda() + 1);
            daopv.incluir(pv);
            for (Produto pro : daopro.getLista()) {
                if (produto.getNome().equals(pro.getNome())) {
                    produto.setQuantidade(pro.getQuantidade() - produto.getQuantidade());
                    produto.setPreco(pro.getPreco());
                    daopro.alterar(produto);
                }
            }
        }
        Nota_Fiscal ntf = new Nota_Fiscal();
        ntf.setCodigo(1650572 + v.getIdVenda());
        Nota_Fiscal ntfc = daont.getLista().get(daont.getLista().size() - 1);
        ntf.setVenda(v.getIdVenda());
        ntf.setIdNotaFiscal(ntfc.getIdNotaFiscal() + 1);
        daont.incluir(ntf);
        cbxPagamento.setEnabled(!true);
        txtPag.setEnabled(!true);
        btnEncerrar.setEnabled(!true);
        vendas.setEnabled(true);
        cbxCliente.setEnabled(true);
        cbxFunc.setEnabled(true);
        btnVend.setEnabled(true);
        txtFindCli.setEnabled(true);
        txtFindFunc.setEnabled(true);
        btnNewCli.setEnabled(true);
        recebido = Float.parseFloat(txtPag.getText());
        txtFindCli.setText("");
        txtFindFunc.setText("");
        txtFindProd.setText("");
        txtPag.setText("");
        txtTT.setText("");
        txtTP.setText("");
        txtPP.setText("");
        produtos.clear();
        Tela_Venda tv = new Tela_Venda(null, true);
        tv.setVisible(true);
        JOptionPane.showMessageDialog(null, "Venda concluida com sucesso");
        }catch(Exception e){         
            JOptionPane.showMessageDialog(null, "Venda não concluida");
        }
    }//GEN-LAST:event_btnEncerrarActionPerformed
    /**
     * Método para atualizar o CPF enquanto seleciona algo no combobox
     *
     * @param evt cada seleção do combobox
     */
    private void cbxClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxClienteActionPerformed
        for (Cliente cliente : daoc.getLista()) {
            if (cbxCliente.getSelectedItem().toString().equals(cliente.getNome())) {
                txtCPF.setText(cliente.getCPF());
            }
        }
    }//GEN-LAST:event_cbxClienteActionPerformed
    /**
     * Abre a visualização de todas as vendas
     *
     * @param evt clique no botão
     */
    private void vendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendasActionPerformed
        FormVisualizarVendas obj = new FormVisualizarVendas(null, true);
        obj.setVisible(true);
    }//GEN-LAST:event_vendasActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        if(v!=null){
            daov.remover(v);
        }
        iniciar();
        limpar();
        txtFindProd.setEnabled(false);
        cbxProd.setEnabled(false);
        btnAdd.setEnabled(false);
        spnQtd.setEnabled(false);
        cbxPagamento.setEnabled(!true);
        txtPag.setEnabled(!true);
        btnEncerrar.setEnabled(!true);
        vendas.setEnabled(true);
        cbxCliente.setEnabled(true);
        cbxFunc.setEnabled(true);
        btnVend.setEnabled(true);
        txtFindCli.setEnabled(true);
        txtFindFunc.setEnabled(true);
        btnNewCli.setEnabled(true);
        recebido = 0;
        produtos.clear();
        txtFindCli.setText("");
        txtFindFunc.setText("");
        txtFindProd.setText("");
        txtPag.setText("");
        txtTT.setText("");
        txtTP.setText("");
        txtPP.setText("");
    }//GEN-LAST:event_btnCancelActionPerformed
    /**
     * Método que mostra o preço do produto selecionado
     * @param evt Selecionar um produto no combobox
     */
    private void cbxProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxProdActionPerformed
       for (Produto produto : daopro.getLista()) {
            if (produto.getNome().equals(cbxProd.getSelectedItem().toString())) {
                txtPP.setText("R$ "+produto.getPreco());
            }
        }
    }//GEN-LAST:event_cbxProdActionPerformed
    /**
     * Método que muda o preço de acordo com a quantidade
     * @param evt Cada valor selecionado no spinner
     */
    private void spnQtdStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnQtdStateChanged
       DecimalFormat dcm = new DecimalFormat("######.##");
        for (Produto produto : daopro.getLista()) {
            if (produto.getNome().equals(cbxProd.getSelectedItem().toString())) {
                txtTT.setText(""+dcm.format(produto.getPreco()*(int)spnQtd.getValue()));
            }
        }
        
    }//GEN-LAST:event_spnQtdStateChanged
    protected static float recebido;

    /**
     * Método para limpar os campos
     */
    public void limpar() {
        spnQtd.setValue(1);
        txtFindProd.setText("");
        cbxCliente.setSelectedIndex(0);
        cbxFunc.setSelectedIndex(0);
        cbxPagamento.setSelectedIndex(0);
        cbxProd.setSelectedIndex(0);

    }
    ArrayList<Produto> produtos = new ArrayList();
    float total = 0;
    DAOFuncionario daof = new DAOFuncionario();
    DAOCliente daoc = new DAOCliente();
    DAOVenda daov = new DAOVenda();
    DAONota_Fiscal daont = new DAONota_Fiscal();
    DAOProdutos_Venda daopv = new DAOProdutos_Venda();
    DAOPagamento daop = new DAOPagamento();
    DAOAtende daoa = new DAOAtende();
    DAOProdutos daopro = new DAOProdutos();
    Cliente cli = null;

    /**
     * Método que inicia as variaveis e os comboboxes
     */
    public void iniciar() {
        DefaultComboBoxModel dft = new DefaultComboBoxModel(daoc.getLista().toArray());
        cbxCliente.setModel(dft);
        DefaultComboBoxModel dft2 = new DefaultComboBoxModel(daof.getLista().toArray());
        cbxFunc.setModel(dft2);
        DefaultComboBoxModel dft3 = new DefaultComboBoxModel(daopro.getLista().toArray());
        cbxProd.setModel(dft3);
        for (Cliente cliente : daoc.getLista()) {
            if (cbxCliente.getSelectedItem().toString().equals(cliente.getNome())) {
                txtCPF.setText(cliente.getCPF());
            }

        }
    }

    /**
     * Método que atualiza a lista de clientes
     *
     * @param nome Argumento do nome digitado
     */
    public void atualizarClientes(String nome) {
        cbxCliente.removeAll();
        if (!nome.equals("")) {
            DefaultComboBoxModel dft = new DefaultComboBoxModel(daoc.localizarNome("select * from cliente where nome like '" + nome + "%';").toArray());
            if (dft != null) {
                cbxCliente.setModel(dft);
                for (Cliente cliente : daoc.getLista()) {
                    if (cbxCliente.getSelectedItem() != null) {
                        if (cbxCliente.getSelectedItem().toString().equals(cliente.getNome())) {
                            txtCPF.setText(cliente.getCPF());
                        }
                    }
                }
            }
        } else {
            DefaultComboBoxModel dft = new DefaultComboBoxModel(daoc.localizarNome("select * from cliente ;").toArray());
            cbxCliente.setModel(dft);
        }

    }

    /**
     * Método que atualiza a lista de Produtos
     *
     * @param nome Argumento do nome digitado
     */
    public void atualizarProdutos(String nome) {
        cbxProd.removeAll();
        DefaultComboBoxModel dft = new DefaultComboBoxModel(daopro.localizarNome("select * from produto where nome like '" + nome + "%';").toArray());
        if (dft != null) {
            cbxProd.setModel(dft);
        }
    }

    /**
     * Método que atualiza a lista de Funcionarios
     *
     * @param nome Argumento do nome digitado
     */
    public void atualizarFuncionarios(String nome) {
        cbxFunc.removeAll();
        DefaultComboBoxModel dft = new DefaultComboBoxModel(daof.localizarNome("select * from funcionario where nome like '" + nome + "%';").toArray());
        cbxFunc.setModel(dft);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormRealizarVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormRealizarVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormRealizarVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormRealizarVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormRealizarVendas dialog = new FormRealizarVendas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnEncerrar;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnNewCli;
    private javax.swing.JButton btnVend;
    private javax.swing.JComboBox<String> cbxCliente;
    private javax.swing.JComboBox<String> cbxFunc;
    private javax.swing.JComboBox<String> cbxPagamento;
    private javax.swing.JComboBox<String> cbxProd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner spnQtd;
    private javax.swing.JLabel txtCPF;
    private javax.swing.JLabel txtCPF1;
    private javax.swing.JTextField txtFindCli;
    private javax.swing.JTextField txtFindFunc;
    private javax.swing.JTextField txtFindProd;
    private javax.swing.JLabel txtPP;
    private javax.swing.JLabel txtPP1;
    private javax.swing.JTextField txtPag;
    private javax.swing.JLabel txtTP;
    private javax.swing.JLabel txtTP1;
    private javax.swing.JLabel txtTT;
    private javax.swing.JLabel txtTT1;
    private javax.swing.JButton vendas;
    // End of variables declaration//GEN-END:variables
}
